import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText

from mail_settings import *

def sendemail(subject, message, from_addr=FROM_ADDR, to_addr_list=TO_ADDR_LIST,
            smtpserver=SMTPSERVER, attachment=None):
    msg = MIMEMultipart()
    msg['Subject'] = subject
    msg['From'] = from_addr
    msg['To'] = ",".join(to_addr_list)
    msgbody = MIMEText(message)
    msg.attach(msgbody)
    if attachment:
        try:
            msg_attachment = MIMEText(open(attachment, 'rb').read())
            msg_attachment.add_header('Content-Disposition', 'attachment', 
                                        filename=attachment.split("/")[-1])
            msg.attach(msg_attachment)
        except IOError, e:
            msg_attachment = MIMEText("Unable to attach: " + str(e))
            msg.attach(msg_attachment)
    server = smtplib.SMTP(SMTPSERVER)
    server.starttls()
    server.login(LOGIN,PASSWORD)
    problems = server.sendmail(from_addr, to_addr_list, msg.as_string())
    server.quit()
    return problems     # Revise this

def mailer(start_time, end_time, elapsed_time, errors_count, errors, log_file=None):
    template = """
Summary
=======

Start time: %s
End time: %s
Elaspsed time: %s
Errors encountered: %s


Error details
=============
%s


This is an automated email generated by SIMO (syncing & mirroring of svn, git and
bzr repos to Bitbucket). SIMO sources are hosted at https://github.com/vlead/simo

""" % (start_time, end_time, elapsed_time, errors_count, errors)
    subject = "SIMO log report for %s" % start_time[:11]
    sendemail(subject, template, attachment=log_file)
    #sendemail(subject, template, attachment=log_file, to_addr_list=['chandan@vlabs.ac.in'])

def test():
    sendemail("Test", "This is a test message without an attachment", 
                to_addr_list=['chandan@vlabs.ac.in'])
    sendemail("Test", "This is a test message with an invalid attachment", 
                to_addr_list=['chandan@vlabs.ac.in'], attachment="")
    sendemail("Test", "This is a test message with an invalid attachment", 
                to_addr_list=['chandan@vlabs.ac.in'], attachment="notfound")
    sendemail("Test", "This is a test message with a valid attachment",
                to_addr_list=['chandan@vlabs.ac.in'], attachment="log/simo.log")

if __name__ == '__main__':
    test()

